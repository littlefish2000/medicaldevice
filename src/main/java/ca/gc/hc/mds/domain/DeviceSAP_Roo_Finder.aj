// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ca.gc.hc.mds.domain;

import ca.gc.hc.mds.domain.DeviceSAP;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect DeviceSAP_Roo_Finder {
    
    public static Long DeviceSAP.countFindDeviceSAPsByDeviceID(Long deviceID) {
        if (deviceID == null) throw new IllegalArgumentException("The deviceID argument is required");
        EntityManager em = DeviceSAP.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM DeviceSAP AS o WHERE o.deviceID = :deviceID", Long.class);
        q.setParameter("deviceID", deviceID);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<DeviceSAP> DeviceSAP.findDeviceSAPsByDeviceID(Long deviceID) {
        if (deviceID == null) throw new IllegalArgumentException("The deviceID argument is required");
        EntityManager em = DeviceSAP.entityManager();
        TypedQuery<DeviceSAP> q = em.createQuery("SELECT o FROM DeviceSAP AS o WHERE o.deviceID = :deviceID", DeviceSAP.class);
        q.setParameter("deviceID", deviceID);
        return q;
    }
    
    public static TypedQuery<DeviceSAP> DeviceSAP.findDeviceSAPsByDeviceID(Long deviceID, String sortFieldName, String sortOrder) {
        if (deviceID == null) throw new IllegalArgumentException("The deviceID argument is required");
        EntityManager em = DeviceSAP.entityManager();
        StringBuilder queryBuilder = new StringBuilder("SELECT o FROM DeviceSAP AS o WHERE o.deviceID = :deviceID");
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            queryBuilder.append(" ORDER BY ").append(sortFieldName);
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                queryBuilder.append(" ").append(sortOrder);
            }
        }
        TypedQuery<DeviceSAP> q = em.createQuery(queryBuilder.toString(), DeviceSAP.class);
        q.setParameter("deviceID", deviceID);
        return q;
    }
    
}
