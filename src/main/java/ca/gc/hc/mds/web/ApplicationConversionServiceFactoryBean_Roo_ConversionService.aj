// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ca.gc.hc.mds.web;

import ca.gc.hc.mds.domain.Application;
import ca.gc.hc.mds.domain.Certificate;
import ca.gc.hc.mds.domain.Company;
import ca.gc.hc.mds.domain.CompanyContact;
import ca.gc.hc.mds.domain.CompanyHistory;
import ca.gc.hc.mds.domain.Correspondence;
import ca.gc.hc.mds.domain.CountryTab;
import ca.gc.hc.mds.domain.Device;
import ca.gc.hc.mds.domain.DrugStandard;
import ca.gc.hc.mds.domain.Facility;
import ca.gc.hc.mds.domain.LicenseStatus;
import ca.gc.hc.mds.domain.Physician;
import ca.gc.hc.mds.domain.PreferredNameCode;
import ca.gc.hc.mds.domain.PreferredNameKeyword;
import ca.gc.hc.mds.domain.Registrar;
import ca.gc.hc.mds.domain.SpecialAccess;
import ca.gc.hc.mds.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Application, String> ApplicationConversionServiceFactoryBean.getApplicationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ca.gc.hc.mds.domain.Application, java.lang.String>() {
            public String convert(Application application) {
                return new StringBuilder().append(application.getOrginLicenseId()).append(' ').append(application.getEntryDate()).append(' ').append(application.getReceiptDate()).append(' ').append(application.getApplicationDesc()).toString();
            }
        };
    }
    
    public Converter<Long, Application> ApplicationConversionServiceFactoryBean.getIdToApplicationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ca.gc.hc.mds.domain.Application>() {
            public ca.gc.hc.mds.domain.Application convert(java.lang.Long id) {
                return Application.findApplication(id);
            }
        };
    }
    
    public Converter<String, Application> ApplicationConversionServiceFactoryBean.getStringToApplicationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ca.gc.hc.mds.domain.Application>() {
            public ca.gc.hc.mds.domain.Application convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Application.class);
            }
        };
    }
    
    public Converter<Certificate, String> ApplicationConversionServiceFactoryBean.getCertificateToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ca.gc.hc.mds.domain.Certificate, java.lang.String>() {
            public String convert(Certificate certificate) {
                return new StringBuilder().append(certificate.getCertificateId()).append(' ').append(certificate.getStatusDate()).append(' ').append(certificate.getReceiptDate()).append(' ').append(certificate.getEntryDate()).toString();
            }
        };
    }
    
    public Converter<String, Certificate> ApplicationConversionServiceFactoryBean.getIdToCertificateConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ca.gc.hc.mds.domain.Certificate>() {
            public ca.gc.hc.mds.domain.Certificate convert(java.lang.String id) {
                return Certificate.findCertificate(id);
            }
        };
    }
    
    public Converter<Company, String> ApplicationConversionServiceFactoryBean.getCompanyToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ca.gc.hc.mds.domain.Company, java.lang.String>() {
            public String convert(Company company) {
                return new StringBuilder().append(company.getCompanyName()).append(' ').append(company.getAddressLine1()).append(' ').append(company.getAddressLine2()).append(' ').append(company.getAddressLine3()).toString();
            }
        };
    }
    
    public Converter<Long, Company> ApplicationConversionServiceFactoryBean.getIdToCompanyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ca.gc.hc.mds.domain.Company>() {
            public ca.gc.hc.mds.domain.Company convert(java.lang.Long id) {
                return Company.findCompany(id);
            }
        };
    }
    
    public Converter<String, Company> ApplicationConversionServiceFactoryBean.getStringToCompanyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ca.gc.hc.mds.domain.Company>() {
            public ca.gc.hc.mds.domain.Company convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Company.class);
            }
        };
    }
    
    public Converter<CompanyContact, String> ApplicationConversionServiceFactoryBean.getCompanyContactToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ca.gc.hc.mds.domain.CompanyContact, java.lang.String>() {
            public String convert(CompanyContact companyContact) {
                return new StringBuilder().append(companyContact.getStatusDate()).append(' ').append(companyContact.getContactName()).append(' ').append(companyContact.getContactTitle()).append(' ').append(companyContact.getE_MAIL()).toString();
            }
        };
    }
    
    public Converter<Long, CompanyContact> ApplicationConversionServiceFactoryBean.getIdToCompanyContactConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ca.gc.hc.mds.domain.CompanyContact>() {
            public ca.gc.hc.mds.domain.CompanyContact convert(java.lang.Long id) {
                return CompanyContact.findCompanyContact(id);
            }
        };
    }
    
    public Converter<String, CompanyContact> ApplicationConversionServiceFactoryBean.getStringToCompanyContactConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ca.gc.hc.mds.domain.CompanyContact>() {
            public ca.gc.hc.mds.domain.CompanyContact convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), CompanyContact.class);
            }
        };
    }
    
    public Converter<CompanyHistory, String> ApplicationConversionServiceFactoryBean.getCompanyHistoryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ca.gc.hc.mds.domain.CompanyHistory, java.lang.String>() {
            public String convert(CompanyHistory companyHistory) {
                return new StringBuilder().append(companyHistory.getChangeDate()).append(' ').append(companyHistory.getCompanyName()).append(' ').append(companyHistory.getAddressLine1()).append(' ').append(companyHistory.getAddressLine2()).toString();
            }
        };
    }
    
    public Converter<Long, CompanyHistory> ApplicationConversionServiceFactoryBean.getIdToCompanyHistoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ca.gc.hc.mds.domain.CompanyHistory>() {
            public ca.gc.hc.mds.domain.CompanyHistory convert(java.lang.Long id) {
                return CompanyHistory.findCompanyHistory(id);
            }
        };
    }
    
    public Converter<String, CompanyHistory> ApplicationConversionServiceFactoryBean.getStringToCompanyHistoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ca.gc.hc.mds.domain.CompanyHistory>() {
            public ca.gc.hc.mds.domain.CompanyHistory convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), CompanyHistory.class);
            }
        };
    }
    
    public Converter<Correspondence, String> ApplicationConversionServiceFactoryBean.getCorrespondenceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ca.gc.hc.mds.domain.Correspondence, java.lang.String>() {
            public String convert(Correspondence correspondence) {
                return new StringBuilder().append(correspondence.getApplicationId()).append(' ').append(correspondence.getOrginallicenceId()).append(' ').append(correspondence.getCompanyId()).append(' ').append(correspondence.getCertificateId()).toString();
            }
        };
    }
    
    public Converter<Long, Correspondence> ApplicationConversionServiceFactoryBean.getIdToCorrespondenceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ca.gc.hc.mds.domain.Correspondence>() {
            public ca.gc.hc.mds.domain.Correspondence convert(java.lang.Long id) {
                return Correspondence.findCorrespondence(id);
            }
        };
    }
    
    public Converter<String, Correspondence> ApplicationConversionServiceFactoryBean.getStringToCorrespondenceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ca.gc.hc.mds.domain.Correspondence>() {
            public ca.gc.hc.mds.domain.Correspondence convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Correspondence.class);
            }
        };
    }
    
    public Converter<CountryTab, String> ApplicationConversionServiceFactoryBean.getCountryTabToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ca.gc.hc.mds.domain.CountryTab, java.lang.String>() {
            public String convert(CountryTab countryTab) {
                return new StringBuilder().append(countryTab.getcountryDesc()).append(' ').append(countryTab.getCountryDesc()).toString();
            }
        };
    }
    
    public Converter<String, CountryTab> ApplicationConversionServiceFactoryBean.getIdToCountryTabConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ca.gc.hc.mds.domain.CountryTab>() {
            public ca.gc.hc.mds.domain.CountryTab convert(java.lang.String id) {
                return CountryTab.findCountryTab(id);
            }
        };
    }
    
    public Converter<Device, String> ApplicationConversionServiceFactoryBean.getDeviceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ca.gc.hc.mds.domain.Device, java.lang.String>() {
            public String convert(Device device) {
                return new StringBuilder().append(device.getTradeName()).append(' ').append(device.getPerfnameCode()).append(' ').append(device.getEntryDate()).append(' ').append(device.getLastChangeDate()).toString();
            }
        };
    }
    
    public Converter<Long, Device> ApplicationConversionServiceFactoryBean.getIdToDeviceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ca.gc.hc.mds.domain.Device>() {
            public ca.gc.hc.mds.domain.Device convert(java.lang.Long id) {
                return Device.findDevice(id);
            }
        };
    }
    
    public Converter<String, Device> ApplicationConversionServiceFactoryBean.getStringToDeviceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ca.gc.hc.mds.domain.Device>() {
            public ca.gc.hc.mds.domain.Device convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Device.class);
            }
        };
    }
    
    public Converter<DrugStandard, String> ApplicationConversionServiceFactoryBean.getDrugStandardToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ca.gc.hc.mds.domain.DrugStandard, java.lang.String>() {
            public String convert(DrugStandard drugStandard) {
                return new StringBuilder().append(drugStandard.getDrugstandardDesc()).toString();
            }
        };
    }
    
    public Converter<String, DrugStandard> ApplicationConversionServiceFactoryBean.getIdToDrugStandardConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ca.gc.hc.mds.domain.DrugStandard>() {
            public ca.gc.hc.mds.domain.DrugStandard convert(java.lang.String id) {
                return DrugStandard.findDrugStandard(id);
            }
        };
    }
    
    public Converter<Facility, String> ApplicationConversionServiceFactoryBean.getFacilityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ca.gc.hc.mds.domain.Facility, java.lang.String>() {
            public String convert(Facility facility) {
                return new StringBuilder().append(facility.getFacilityName()).append(' ').append(facility.getFacilityCity()).append(' ').append(facility.getFacilityProvince()).append(' ').append(facility.getFacilityPostalCode()).toString();
            }
        };
    }
    
    public Converter<Long, Facility> ApplicationConversionServiceFactoryBean.getIdToFacilityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ca.gc.hc.mds.domain.Facility>() {
            public ca.gc.hc.mds.domain.Facility convert(java.lang.Long id) {
                return Facility.findFacility(id);
            }
        };
    }
    
    public Converter<String, Facility> ApplicationConversionServiceFactoryBean.getStringToFacilityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ca.gc.hc.mds.domain.Facility>() {
            public ca.gc.hc.mds.domain.Facility convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Facility.class);
            }
        };
    }
    
    public Converter<LicenseStatus, String> ApplicationConversionServiceFactoryBean.getLicenseStatusToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ca.gc.hc.mds.domain.LicenseStatus, java.lang.String>() {
            public String convert(LicenseStatus licenseStatus) {
                return new StringBuilder().append(licenseStatus.getDescr()).toString();
            }
        };
    }
    
    public Converter<String, LicenseStatus> ApplicationConversionServiceFactoryBean.getIdToLicenseStatusConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ca.gc.hc.mds.domain.LicenseStatus>() {
            public ca.gc.hc.mds.domain.LicenseStatus convert(java.lang.String id) {
                return LicenseStatus.findLicenseStatus(id);
            }
        };
    }
    
    public Converter<Physician, String> ApplicationConversionServiceFactoryBean.getPhysicianToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ca.gc.hc.mds.domain.Physician, java.lang.String>() {
            public String convert(Physician physician) {
                return new StringBuilder().append(physician.getPhysicianFirstName()).append(' ').append(physician.getPhysicianLastName()).append(' ').append(physician.getPhysicianCity()).append(' ').append(physician.getPhysicianProvince()).toString();
            }
        };
    }
    
    public Converter<Long, Physician> ApplicationConversionServiceFactoryBean.getIdToPhysicianConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ca.gc.hc.mds.domain.Physician>() {
            public ca.gc.hc.mds.domain.Physician convert(java.lang.Long id) {
                return Physician.findPhysician(id);
            }
        };
    }
    
    public Converter<String, Physician> ApplicationConversionServiceFactoryBean.getStringToPhysicianConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ca.gc.hc.mds.domain.Physician>() {
            public ca.gc.hc.mds.domain.Physician convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Physician.class);
            }
        };
    }
    
    public Converter<PreferredNameCode, String> ApplicationConversionServiceFactoryBean.getPreferredNameCodeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ca.gc.hc.mds.domain.PreferredNameCode, java.lang.String>() {
            public String convert(PreferredNameCode preferredNameCode) {
                return new StringBuilder().append(preferredNameCode.getPrefDescEng1()).append(' ').append(preferredNameCode.getPrefDescEng2()).append(' ').append(preferredNameCode.getPrefDescFr1()).append(' ').append(preferredNameCode.getPrefDescFr2()).toString();
            }
        };
    }
    
    public Converter<String, PreferredNameCode> ApplicationConversionServiceFactoryBean.getIdToPreferredNameCodeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ca.gc.hc.mds.domain.PreferredNameCode>() {
            public ca.gc.hc.mds.domain.PreferredNameCode convert(java.lang.String id) {
                return PreferredNameCode.findPreferredNameCode(id);
            }
        };
    }
    
    public Converter<PreferredNameKeyword, String> ApplicationConversionServiceFactoryBean.getPreferredNameKeywordToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ca.gc.hc.mds.domain.PreferredNameKeyword, java.lang.String>() {
            public String convert(PreferredNameKeyword preferredNameKeyword) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<String, PreferredNameKeyword> ApplicationConversionServiceFactoryBean.getIdToPreferredNameKeywordConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ca.gc.hc.mds.domain.PreferredNameKeyword>() {
            public ca.gc.hc.mds.domain.PreferredNameKeyword convert(java.lang.String id) {
                return PreferredNameKeyword.findPreferredNameKeyword(id);
            }
        };
    }
    
    public Converter<Registrar, String> ApplicationConversionServiceFactoryBean.getRegistrarToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ca.gc.hc.mds.domain.Registrar, java.lang.String>() {
            public String convert(Registrar registrar) {
                return new StringBuilder().append(registrar.getRegistrarName()).append(' ').append(registrar.getAddrLine1()).append(' ').append(registrar.getAddrLine2()).append(' ').append(registrar.getAddrline3()).toString();
            }
        };
    }
    
    public Converter<String, Registrar> ApplicationConversionServiceFactoryBean.getIdToRegistrarConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ca.gc.hc.mds.domain.Registrar>() {
            public ca.gc.hc.mds.domain.Registrar convert(java.lang.String id) {
                return Registrar.findRegistrar(id);
            }
        };
    }
    
    public Converter<SpecialAccess, String> ApplicationConversionServiceFactoryBean.getSpecialAccessToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ca.gc.hc.mds.domain.SpecialAccess, java.lang.String>() {
            public String convert(SpecialAccess specialAccess) {
                return new StringBuilder().append(specialAccess.getPhysicianId()).append(' ').append(specialAccess.getFacilityId()).append(' ').append(specialAccess.getRequestDate()).append(' ').append(specialAccess.getActionDate()).toString();
            }
        };
    }
    
    public Converter<Long, SpecialAccess> ApplicationConversionServiceFactoryBean.getIdToSpecialAccessConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ca.gc.hc.mds.domain.SpecialAccess>() {
            public ca.gc.hc.mds.domain.SpecialAccess convert(java.lang.Long id) {
                return SpecialAccess.findSpecialAccess(id);
            }
        };
    }
    
    public Converter<String, SpecialAccess> ApplicationConversionServiceFactoryBean.getStringToSpecialAccessConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ca.gc.hc.mds.domain.SpecialAccess>() {
            public ca.gc.hc.mds.domain.SpecialAccess convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), SpecialAccess.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getApplicationToStringConverter());
        registry.addConverter(getIdToApplicationConverter());
        registry.addConverter(getStringToApplicationConverter());
        registry.addConverter(getCertificateToStringConverter());
        registry.addConverter(getIdToCertificateConverter());
        registry.addConverter(getCompanyToStringConverter());
        registry.addConverter(getIdToCompanyConverter());
        registry.addConverter(getStringToCompanyConverter());
        registry.addConverter(getCompanyContactToStringConverter());
        registry.addConverter(getIdToCompanyContactConverter());
        registry.addConverter(getStringToCompanyContactConverter());
        registry.addConverter(getCompanyHistoryToStringConverter());
        registry.addConverter(getIdToCompanyHistoryConverter());
        registry.addConverter(getStringToCompanyHistoryConverter());
        registry.addConverter(getCorrespondenceToStringConverter());
        registry.addConverter(getIdToCorrespondenceConverter());
        registry.addConverter(getStringToCorrespondenceConverter());
        registry.addConverter(getCountryTabToStringConverter());
        registry.addConverter(getIdToCountryTabConverter());
        registry.addConverter(getDeviceToStringConverter());
        registry.addConverter(getIdToDeviceConverter());
        registry.addConverter(getStringToDeviceConverter());
        registry.addConverter(getDrugStandardToStringConverter());
        registry.addConverter(getIdToDrugStandardConverter());
        registry.addConverter(getFacilityToStringConverter());
        registry.addConverter(getIdToFacilityConverter());
        registry.addConverter(getStringToFacilityConverter());
        registry.addConverter(getLicenseStatusToStringConverter());
        registry.addConverter(getIdToLicenseStatusConverter());
        registry.addConverter(getPhysicianToStringConverter());
        registry.addConverter(getIdToPhysicianConverter());
        registry.addConverter(getStringToPhysicianConverter());
        registry.addConverter(getPreferredNameCodeToStringConverter());
        registry.addConverter(getIdToPreferredNameCodeConverter());
        registry.addConverter(getPreferredNameKeywordToStringConverter());
        registry.addConverter(getIdToPreferredNameKeywordConverter());
        registry.addConverter(getRegistrarToStringConverter());
        registry.addConverter(getIdToRegistrarConverter());
        registry.addConverter(getSpecialAccessToStringConverter());
        registry.addConverter(getIdToSpecialAccessConverter());
        registry.addConverter(getStringToSpecialAccessConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
