// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ca.gc.hc.mds.domain;

import ca.gc.hc.mds.domain.Application;
import ca.gc.hc.mds.domain.ApplicationDataOnDemand;
import ca.gc.hc.mds.domain.ApplicationIntegrationTest;
import java.util.List;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ApplicationIntegrationTest_Roo_IntegrationTest {
    
    declare @type: ApplicationIntegrationTest: @RunWith(SpringJUnit4ClassRunner.class);
    
    declare @type: ApplicationIntegrationTest: @Transactional;
    
    @Autowired
    ApplicationDataOnDemand ApplicationIntegrationTest.dod;
    
    @Test
    public void ApplicationIntegrationTest.testCountApplications() {
        Assert.assertNotNull("Data on demand for 'Application' failed to initialize correctly", dod.getRandomApplication());
        long count = Application.countApplications();
        Assert.assertTrue("Counter for 'Application' incorrectly reported there were no entries", count > 0);
    }
    
    @Test
    public void ApplicationIntegrationTest.testFindApplication() {
        Application obj = dod.getRandomApplication();
        Assert.assertNotNull("Data on demand for 'Application' failed to initialize correctly", obj);
        Long id = obj.getApplicationId();
        Assert.assertNotNull("Data on demand for 'Application' failed to provide an identifier", id);
        obj = Application.findApplication(id);
        Assert.assertNotNull("Find method for 'Application' illegally returned null for id '" + id + "'", obj);
        Assert.assertEquals("Find method for 'Application' returned the incorrect identifier", id, obj.getApplicationId());
    }
    
    @Test
    public void ApplicationIntegrationTest.testFindApplicationEntries() {
        Assert.assertNotNull("Data on demand for 'Application' failed to initialize correctly", dod.getRandomApplication());
        long count = Application.countApplications();
        if (count > 20) count = 20;
        int firstResult = 0;
        int maxResults = (int) count;
        List<Application> result = Application.findApplicationEntries(firstResult, maxResults);
        Assert.assertNotNull("Find entries method for 'Application' illegally returned null", result);
        Assert.assertEquals("Find entries method for 'Application' returned an incorrect number of entries", count, result.size());
    }
    
}
